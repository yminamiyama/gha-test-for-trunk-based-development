# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application Main Flow

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qas
          - prd
        
  pull_request:
    branches: [ "main" ]
    types: ["opened", "synchronize", "closed"]

permissions:
  contents: read

jobs:
  call-unit-test:
    uses: ./.github/workflows/python-app-unittest.yml
  set-environment:
    runs-on: ubuntu-latest
    needs:
      - call-unit-test
    outputs:
      output_dev_deployment: ${{ steps.dev_deployment.outputs.deployment }}
      output_release_deployment: ${{ steps.release_deployment.outputs.deployment }}
    steps:
      - id: dev_deployment
        if: github.event.pull_request.merged == true
        run: echo "deployment=dev" >> "$GITHUB_OUTPUT"
      - id: release_deployment
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment != ''
        run: echo "deployment=${{ inputs.environment }}" >> "$GITHUB_OUTPUT"
      - name: log
        run: |
          echo ${{ steps.dev_deployment.outputs.deployment }}
          echo ${{ steps.release_deployment.outputs.deployment }}
  call-deployment:
    needs: 
      - call-unit-test
      - set-environment
    if: ${{needs.set-environment.outputs.output_dev_deployment}} == 'dev' || {{needs.set-environment.outputs.output_release_deployment}} == 'qas' || {{needs.set-environment.outputs.output_release_deployment}} == 'prd'
    uses: ./.github/workflows/python-app-deployment.yml
    with:
      environment: ${{ inputs.environment }}
    secrets: inherit
